{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/bill/bill.component.css","webpack:///./src/app/bill/bill.component.html","webpack:///./src/app/bill/bill.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/task/task.component.css","webpack:///./src/app/task/task.component.html","webpack:///./src/app/task/task.component.ts","webpack:///./src/app/user/sign-in/sign-in.component.css","webpack:///./src/app/user/sign-in/sign-in.component.html","webpack:///./src/app/user/sign-in/sign-in.component.ts","webpack:///./src/app/user/sign-up/sign-up.component.css","webpack:///./src/app/user/sign-up/sign-up.component.html","webpack:///./src/app/user/sign-up/sign-up.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/**Approved**/\"","module.exports = \"<router-outlet></router-outlet>\\n\\n<!--Approved-->\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n//Approved","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { UserService } from './shared/user.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { UserComponent } from './user/user.component';\nimport { SignInComponent } from './user/sign-in/sign-in.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { TaskComponent } from './task/task.component';\nimport { BillComponent } from './bill/bill.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignUpComponent,\n    UserComponent,\n    SignInComponent,\n    HomeComponent,\n    TaskComponent,\n    BillComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes) //uses routs in routes.ts file\n  ],\n  providers: [UserService,AuthGuard,\n    ,\n    {\n      provide : HTTP_INTERCEPTORS,\n      useClass : AuthInterceptor,\n      multi : true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router : Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean { //Observable<boolean> | Promise<boolean> | boolean {\n      //User is authenticated if there exist a userToken\n      if(localStorage.getItem('userToken') != null){\n        return true;\n      }\n      this.router.navigate(['/login']);\n      return false;\n  }\n}\n\n//Approved\n/***\n * We need this guard so we can secure our home component \n * when the user is not logged in. A user should only be \n * authorized to access /home when he/she is logged in.\n * \n */\n\n\n\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpUserEvent, HttpEvent, HttpResponse } from \"@angular/common/http\";\r\n//import { Observable } from \"rxjs/Observable\";\r\n//import 'rxjs/add/operator/do';\r\nimport { Observable } from 'rxjs';\r\nimport { map, filter, tap } from 'rxjs/operators';\r\nimport { UserService } from \"../shared/user.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) { }\r\n    //intercept is a function\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        //if the user is not authenticated\r\n        if (req.headers.get('No-Auth') == \"True\")\r\n            return next.handle(req.clone());\r\n\r\n        //if the user is authenticated \r\n        if (localStorage.getItem('userToken') != null) {\r\n            const clonedreq = req.clone({\r\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + localStorage.getItem('userToken'))\r\n            });\r\n            return next.handle(clonedreq).pipe(\r\n                tap(event => {\r\n                    if(event instanceof HttpResponse){ }\r\n                }, error => {\r\n                    if (error.status === 401)\r\n                        this.router.navigateByUrl('/login');                    \r\n                })\r\n            );\r\n        }\r\n        //if there is no token then redirect to login page\r\n        else {\r\n            this.router.navigateByUrl('/login');\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * A token only has a limited amount of useful life, to extend \r\n * the useful life of a auth token, we use interceptors.\r\n\r\n//Line 29 => .pipe to line 33 code updated \r\n                 //.do(\r\n                // succ => { },\r\n                // err => {\r\n                //     if (err.status === 401)\r\n                //         this.router.navigateByUrl('/login');\r\n                // }\r\n                // );\r\n */\r\n\r\n //Approved\r\n ","module.exports = \"\"","module.exports = \"<p>\\n  bill works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bill',\n  templateUrl: './bill.component.html',\n  styleUrls: ['./bill.component.css']\n})\nexport class BillComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/**Approved**/\"","module.exports = \"<nav>\\n  <div class=\\\"nav-wrapper\\\">\\n    <class=\\\"brand-logo center\\\">\\n      <i class=\\\"material-icons\\\">note_add</i>Notify</a>\\n    <ul id=\\\"nav-mobile\\\" class=\\\"right hide-on-med-and-down\\\">\\n      <li>\\n        <a (click)=\\\"Logout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"card blue\\\">\\n  <div class=\\\"card-content\\\">\\n    <h1>Welcome, <span>{{userClaims.Email}}</span>!</h1>\\n  </div>\\n  <div class=\\\"card-tabs\\\">\\n    <ul class=\\\"tabs tabs-fixed-width\\\">\\n      <li class=\\\"tab\\\"><a href=\\\"#Task1\\\">Tasks</a></li>\\n      <li class=\\\"tab\\\"><a class=\\\"active\\\" href=\\\"#Bills2\\\">Bills</a></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-content grey lighten-4\\\">\\n    <div id=\\\"Task1\\\">Tasks</div>\\n    <div id=\\\"Bills2\\\">Bills</div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\" *ngIf=\\\"userClaims\\\">\\n  <div class=\\\"col s12 m7\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-content\\\">\\n        <span>Email : {{userClaims.Email}}</span>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../shared/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  userClaims: any;\n\n  //Inject Router here because we're using\n  //router.navigate on line 27\n  constructor(private router: Router, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUserInfo().subscribe((data: any) => {\n      this.userClaims = data;\n    });\n  }\n\n  //Remove the userToken to log out\n  Logout() {\n    localStorage.removeItem('userToken');\n    this.router.navigate(['/login']);\n  }\n\n\n}\n\n","import { Routes } from '@angular/router'\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\r\nimport { SignInComponent } from './user/sign-in/sign-in.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\nexport const appRoutes: Routes = [\r\n    //The home component requires authentication\r\n    //canActicate is implemented in auth.guard.ts file\r\n    { path: 'home', component: HomeComponent,canActivate:[AuthGuard] },\r\n\r\n    //These routes do not need authentication\r\n    {\r\n        //When signup url is used it will load two components: UserComponent and SignUpComponent\r\n        //UserComponent is the parent and SignUp is the child component\r\n        path: 'signup', component: UserComponent,\r\n        children: [{ path: '', component: SignUpComponent }]\r\n    },\r\n    {\r\n        path: 'login', component: UserComponent,\r\n        children: [{ path: '', component: SignInComponent }]\r\n    },\r\n    { path : '', redirectTo:'/login', pathMatch : 'full'}\r\n    \r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Response } from \"@angular/http\";\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { RegisterBindingModel } from './user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'  //Didn't have this\r\n})\r\nexport class UserService {\r\n  readonly rootUrl = 'http://localhost:52739';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  registerUser(user: RegisterBindingModel) {\r\n    const body: RegisterBindingModel = {\r\n      Email: user.Email,\r\n      Password: user.Password,\r\n      ConfirmPassword: user.ConfirmPassword\r\n    }\r\n    var reqHeader = new HttpHeaders({'No-Auth':'True'});  //original\r\n    return this.http.post(this.rootUrl + '/api/Account/Register', body ,{headers : reqHeader});\r\n  }\r\n\r\n  //This is similar to what we did in PostMan\r\n  //This function returns an absorver\r\n  userAuthentication(userEmail, password) {\r\n    var data = \"username=\" + userEmail + \"&password=\" + password + \"&grant_type=password\";\r\n    var reqHeader = new HttpHeaders({ 'Content-Type': 'application/x-www-urlencoded','No-Auth':'True' });\r\n    return this.http.post(this.rootUrl + '/token', data, { headers: reqHeader });\r\n  }\r\n\r\n  //Making API http get request\r\n  getUserInfo(){\r\n   return  this.http.get(this.rootUrl+'/api/Account/UserInfo');\r\n  }\r\n\r\n}\r\n\r\n//Approved\r\n\r\n\r\n","module.exports = \"\"","module.exports = \"<p>\\n  task works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/**Approved**/\"","module.exports = \"<!--isLoginError is a property in sin-in.component.ts file-->\\n<div *ngIf=\\\"isLoginError\\\" class=\\\"red-text center error-message\\\">\\n  <i class=\\\"material-icons\\\">error</i> Incorrect email or password\\n</div>\\n<form #loginForm=\\\"ngForm\\\" class=\\\"col s12 white\\\" (ngSubmit)=\\\"OnSubmit(Email.value,Password.value)\\\">\\n <div class=\\\"row\\\">\\n   <div class=\\\"input-field col s12\\\">\\n     <i class=\\\"material-icons prefix\\\">account_circle</i>\\n     <input type=\\\"text\\\" #Email ngModel name=\\\"Email\\\" placeholder=\\\"Email\\\" required>\\n   </div>\\n </div>\\n <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s12\\\">\\n      <i class=\\\"material-icons prefix\\\">vpn_key</i>\\n      <input type=\\\"password\\\" #Password ngModel name=\\\"Password\\\" placeholder=\\\"Password\\\" required>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s12\\\">\\n        <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn-large btn-submit\\\" type=\\\"submit\\\">Login</button>\\n      </div>\\n    </div>\\n</form>\\n\\n<!--Approved-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../shared/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n  isLoginError : boolean = false;\n\n  //This component is using the userAuthentication method from the\n  //user.service class so it need access to the UserService component.\n  //Dependency injection is used here to do just that.\n  constructor(private userService : UserService,private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  //Request a token\n  OnSubmit(userEmail,password){\n     this.userService.userAuthentication(userEmail,password).subscribe((data : any)=>{\n      localStorage.setItem('userToken',data.access_token);\n      //Once the user logs in, go the the home route\n      this.router.navigate(['/home']); \n    },\n    (err : HttpErrorResponse)=>{\n      this.isLoginError = true;\n    });\n  }\n\n}\n\n//Approved\n","module.exports = \"/**Approved**/\"","module.exports = \"<form class=\\\"col s12 white\\\" #userRegistrationForm=\\\"ngForm\\\" (ngSubmit)=\\\"OnSubmit(userRegistrationForm)\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s6\\\">\\n      <input class=\\\"validate\\\" type=\\\"text\\\" name=\\\"Email\\\" #Email=\\\"ngModel\\\" [(ngModel)]=\\\"user.Email\\\" [pattern]=\\\"emailPattern\\\">\\n      <label data-error=\\\"Invalid email!\\\">Email</label>\\n    </div>\\n    <div class=\\\"input-field col s6\\\">\\n        <input class=\\\"validate\\\" type=\\\"password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" [(ngModel)]=\\\"user.Password\\\" required minlength=\\\"3\\\">\\n        <label [attr.data-error]=\\\"Password.errors!=null?(Password.errors.required?'Required field!':'Minimum 3 characters needed'):''\\\">Password</label>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s6\\\">\\n          <input class=\\\"validate\\\" type=\\\"password\\\" name=\\\"ConfirmPassword\\\" #ConfirmPassword=\\\"ngModel\\\" [(ngModel)]=\\\"user.ConfirmPassword\\\" required minlength=\\\"3\\\">\\n          <label [attr.data-error]=\\\"ConfirmPassword.errors!=null?(ConfirmPassword.errors.required?'Required field!':'Minimum 3 characters needed'):''\\\">Confirm Password</label>\\n      </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s12\\\">\\n      <button [disabled]=\\\"!userRegistrationForm.valid\\\" class=\\\"btn-large btn-submit\\\" type=\\\"submit\\\">Submit</button>\\n    </div>\\n  </div>\\n</form>\\n\\n<!--Approved-->\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr'\r\n\r\nimport { RegisterBindingModel } from '../../shared/user.model';\r\nimport { UserService } from '../../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  user: RegisterBindingModel;\r\n  emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n\r\n  constructor(private userService: UserService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm(form?: NgForm) {\r\n    if (form != null)\r\n      form.reset();\r\n    this.user = {\r\n      Email: '',\r\n      Password: '',\r\n      ConfirmPassword: ''\r\n    }\r\n  }\r\n\r\n  OnSubmit(form: NgForm) {\r\n    this.userService.registerUser(form.value)\r\n      .subscribe((data: any) => {\r\n          this.resetForm(form);\r\n          this.toastr.success('User registration successful');\r\n      });\r\n  }\r\n}\r\n\r\n\r\n//Approved\r\n\r\n\r\n","module.exports = \"/**Approved**/\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s8 offset-s2\\\">\\n      <div class=\\\"card grey lighten-2\\\">\\n        <div class=\\\"card-tabs\\\">\\n          <ul class=\\\"tabs tabs-fixed-width tabs-transparent\\\">\\n            <li class=\\\"tab\\\">\\n              <!--When Sign In is triggered, it should use the /login route-->\\n              <!--The /login route is defined in routes.ts file which is imported\\n              in the app.module file\\n              || The active is just for css on sign in tab-->\\n\\n              <a routerLink='/login' routerLinkActive='active'>Sign In</a>\\n            </li>\\n            <li class=\\\"tab\\\">\\n              <a  routerLink='/signup' routerLinkActive='active'>Sign Up</a>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"card-content white\\\">\\n          <div class=\\\"row\\\">\\n            <router-outlet></router-outlet>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!--Approved-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n//Approved\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n//Approved\n\n  "],"sourceRoot":""}