{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/home/bill/bill.component.css","webpack:///./src/app/home/bill/bill.component.html","webpack:///./src/app/home/bill/bill.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/task/task.component.css","webpack:///./src/app/home/task/task.component.html","webpack:///./src/app/home/task/task.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/user/sign-in/sign-in.component.css","webpack:///./src/app/user/sign-in/sign-in.component.html","webpack:///./src/app/user/sign-in/sign-in.component.ts","webpack:///./src/app/user/sign-up/sign-up.component.css","webpack:///./src/app/user/sign-up/sign-up.component.html","webpack:///./src/app/user/sign-up/sign-up.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/**Approved**/\"","module.exports = \"<router-outlet></router-outlet>\\n\\n<!--Approved-->\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n//Approved","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule} from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UserService } from './shared/user.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { UserComponent } from './user/user.component';\r\nimport { SignInComponent } from './user/sign-in/sign-in.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\r\nimport { appRoutes } from './routes';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\nimport { TaskComponent } from './home/task/task.component';\r\nimport { BillComponent } from './home/bill/bill.component';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignUpComponent,\r\n    UserComponent,\r\n    SignInComponent,\r\n    HomeComponent,\r\n    TaskComponent,\r\n    BillComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ToastrModule.forRoot(),\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot(appRoutes), // uses routs in routes.ts file\r\n    NgbModule.forRoot()\r\n  ],\r\n  providers: [UserService, AuthGuard,\r\n    {\r\n      provide : HTTP_INTERCEPTORS,\r\n      useClass : AuthInterceptor,\r\n      multi : true\r\n    }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router : Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean { //Observable<boolean> | Promise<boolean> | boolean {\n      //User is authenticated if there exist a userToken\n      if(localStorage.getItem('userToken') != null){\n        return true;\n      }\n      this.router.navigate(['/login']);\n      return false;\n  }\n}\n\n//Approved\n/***\n * We need this guard so we can secure our home component \n * when the user is not logged in. A user should only be \n * authorized to access /home when he/she is logged in.\n * \n */\n\n\n\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpUserEvent, HttpEvent, HttpResponse } from \"@angular/common/http\";\r\n//import { Observable } from \"rxjs/Observable\";\r\n//import 'rxjs/add/operator/do';\r\nimport { Observable } from 'rxjs';\r\nimport { map, filter, tap } from 'rxjs/operators';\r\nimport { UserService } from \"../shared/user.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) { }\r\n    //intercept is a function\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        //if the user is not authenticated\r\n        if (req.headers.get('No-Auth') == \"True\")\r\n            return next.handle(req.clone());\r\n\r\n        //if the user is authenticated \r\n        if (localStorage.getItem('userToken') != null) {\r\n            const clonedreq = req.clone({\r\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + localStorage.getItem('userToken'))\r\n            });\r\n            return next.handle(clonedreq).pipe(\r\n                tap(event => {\r\n                    if(event instanceof HttpResponse){ }\r\n                }, error => {\r\n                    if (error.status === 401)\r\n                        this.router.navigateByUrl('/login');                    \r\n                })\r\n            );\r\n        }\r\n        //if there is no token then redirect to login page\r\n        else {\r\n            this.router.navigateByUrl('/login');\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * A token only has a limited amount of useful life, to extend \r\n * the useful life of a auth token, we use interceptors.\r\n\r\n//Line 29 => .pipe to line 33 code updated \r\n                 //.do(\r\n                // succ => { },\r\n                // err => {\r\n                //     if (err.status === 401)\r\n                //         this.router.navigateByUrl('/login');\r\n                // }\r\n                // );\r\n */\r\n\r\n //Approved\r\n ","module.exports = \"\"","module.exports = \"<!-- <h1>Bills</h1> -->\\r\\n<div class=\\\"row\\\" *ngIf=\\\"billBucket\\\">\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let bill of billBucket\\\">\\r\\n      {{bill.Description}}\\r\\n      <p>Due: {{ bill.DueDate | date: 'longDate'}} &nbsp;\\r\\n        <input type=\\\"checkbox\\\" id=\\\"paid\\\" (change)=\\\"onPut(bill.BillId, bill)\\\" [(ngModel)]=\\\"bill.Paid\\\">\\r\\n        <label for=\\\"paid\\\">Paid</label>\\r\\n      </p>\\r\\n      <br> Amount: {{bill.AmountOwed | currency: 'USD'}} &nbsp;\\r\\n      <input type=\\\"checkbox\\\" id=\\\"auto\\\" (change)=\\\"onPut(bill.BillId, bill)\\\" [(ngModel)]=\\\"bill.Automatic\\\">\\r\\n      <label for=\\\"auto\\\">Automatic</label>\\r\\n      <br> \\r\\n      <button class=\\\"btn btn-success\\\" (click)=\\\"onDetail(bill.BillId)\\\" name=\\\"details\\\">Details</button>\\r\\n      <form id=\\\"detail{{bill.BillId}}\\\" #putBill=\\\"ngForm\\\" class=\\\"col s12 white\\\" (ngSubmit)=\\\"onPut(bill.BillId, bill)\\\" style=\\\"display:none\\\">\\r\\n        <div>\\r\\n          <input type=\\\"text\\\" name=\\\"putCompany\\\" [(ngModel)]=\\\"bill.BillHolder\\\" required>\\r\\n        </div>\\r\\n        <div>\\r\\n          <input type=\\\"date\\\" name=\\\"putDate\\\" [(ngModel)]=\\\"bill.DueDate\\\" required>\\r\\n        </div>\\r\\n        <div>\\r\\n          <input type=\\\"text\\\" name=\\\"putAmount\\\" [(ngModel)]=\\\"bill.AmountOwed\\\" required>\\r\\n        </div>\\r\\n        <div>\\r\\n          <input type=\\\"text\\\" name=\\\"putDescription\\\" [(ngModel)]=\\\"bill.Description\\\">\\r\\n        </div>\\r\\n        <div>\\r\\n          <button class=\\\"btn btn-success btn-submit\\\" id=\\\"saveButton\\\" (click)=\\\"onPut(bill.BillId, bill)\\\">Save Changes</button>\\r\\n          <button class=\\\"btn btn-success\\\" id=\\\"cancelButton\\\" (click)=\\\"onDetail(bill.BillId)\\\">Cancel</button>\\r\\n          <button class=\\\"btn btn-success\\\" id=\\\"deleteButton\\\" (click)=\\\"onDelete(bill.BillId)\\\">Delete</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n<form class=\\\"col s12 white\\\" name=\\\"form?\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"input-field col s12\\\">\\r\\n      <label for=\\\"billHolder\\\">Company: </label>\\r\\n      <input type=\\\"text\\\" name=\\\"billHolder\\\" [(ngModel)]=\\\"billHolder\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"input-field col s12\\\">\\r\\n      <input type=\\\"date\\\" name=\\\"dueDate\\\" [(ngModel)]=\\\"dueDate\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"input-field col s12\\\">\\r\\n      <label for=\\\"amountOwed\\\">Amount Owed: </label>\\r\\n      <input type=\\\"text\\\" name=\\\"amountOwed\\\" [(ngModel)]=\\\"amountOwed\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"input-field col s12\\\">\\r\\n      <label for=\\\"description\\\">Description: </label>\\r\\n      <input type=\\\"text\\\" name=\\\"description\\\" [(ngModel)]=\\\"description\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"input-field col s12\\\">\\r\\n      <button class=\\\"btn btn-success btn-submit\\\" type=\\\"submit\\\" (click)=\\\"onPost()\\\">Post</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\"","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from './../../shared/user.service';\r\nimport { BillItem } from './../../shared/billItem.model';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bill',\r\n  templateUrl: './bill.component.html',\r\n  styleUrls: ['./bill.component.css']\r\n})\r\nexport class BillComponent implements OnInit {\r\n\r\n  billBucket: BillItem;\r\n  isPostError = false;\r\n  billHolder: string = \"\"; \r\n  dueDate: Date; \r\n  amountOwed: Number;\r\n  description: string = \"\";\r\n  \r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.getBillItems();\r\n  }\r\n\r\n  getBillItems(){\r\n    this.userService.getAllBillItems().subscribe((data: any) => {\r\n      this.billBucket = data;\r\n    });\r\n  }\r\n  onPost() {\r\n    const newBill: BillItem = {\r\n      BillId: 0,\r\n      UserId: 0,\r\n      BillHolder: this.billHolder,\r\n      DueDate: this.dueDate,\r\n      AmountOwed: this.amountOwed,\r\n      Description: this.description\r\n    }\r\n\r\n    this.userService.postBillItem(newBill).subscribe((data: any) => { \r\n      this.getBillItems();\r\n    },\r\n      (err: HttpErrorResponse) => {\r\n        console.log(err);\r\n        this.isPostError = true;\r\n      });\r\n  }\r\n\r\n  onDetail(id: Number) {\r\n    var x = document.getElementById('detail' + id);\r\n    if(x.style.display === \"none\"){\r\n      x.style.display = \"block\";\r\n    }\r\n    else {\r\n      x.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  onPut(id: Number, bill: BillItem) {\r\n\r\n    this.userService.putBillItem(id, bill).subscribe((data: any) => {\r\n      this.getBillItems();\r\n    },\r\n    (err:HttpErrorResponse) => {\r\n      console.log(err);\r\n      this.isPostError = true;\r\n    });\r\n  }\r\n\r\n  onDelete(id: Number) {\r\n    this.userService.deleteBillItem(id).subscribe((data: any) => {\r\n      this.getBillItems();\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      console.log(err);\r\n      this.isPostError = true;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"/**Approved**/\\r\\nimg.two{\\r\\n    width: 100%;\\r\\n    height: 200px;\\r\\n}\\r\\nh5 {\\r\\n    font-family: \\\"Avant Garde\\\", Avantgarde, \\\"Century Gothic\\\", CenturyGothic, \\\"AppleGothic\\\", sans-serif;\\r\\n    font-size: 42px;\\r\\n    text-shadow: 0 1px 0 #ccc, \\r\\n               0 2px 0 #c9c9c9,\\r\\n               0 3px 0 #bbb,\\r\\n               0 4px 0 #b9b9b9,\\r\\n               0 5px 0 #aaa,\\r\\n               0 6px 1px rgba(0,0,0,.1),\\r\\n               0 0 5px rgba(0,0,0,.1),\\r\\n               0 1px 3px rgba(0,0,0,.3),\\r\\n               0 3px 5px rgba(0,0,0,.2),\\r\\n               0 5px 10px rgba(0,0,0,.25),\\r\\n               0 10px 10px rgba(0,0,0,.2),\\r\\n               0 20px 20px rgba(0,0,0,.15);\\r\\n}\\r\\n\"","module.exports = \"<nav>\\r\\n  <div class=\\\"nav-wrapper black\\\">\\r\\n    <a href=\\\"home\\\" class=\\\"brand-logo center\\\">\\r\\n      <i class=\\\"material-icons\\\">note_add</i>Notify</a>\\r\\n    <ul id=\\\"nav-mobile\\\" class=\\\"right hide-on-med-and-down\\\">\\r\\n      <li>\\r\\n        <a (click)=\\\"Logout()\\\">Logout</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"col s12 m6\\\">\\r\\n  <!-- <div class=\\\"card blue\\\"> -->\\r\\n  <div class=\\\"card teal card-image\\\">\\r\\n    <img class=\\\"two\\\" src=\\\"https://materializecss.com/images/sample-1.jpg\\\">\\r\\n    <div class=\\\"card-content white-text\\\" *ngIf=\\\"userClaims\\\">\\r\\n        <h5><span>Welcome, {{userClaims.Email}}!</span></h5>\\r\\n      <!-- <div class=\\\"row\\\" *ngIf=\\\"userClaims\\\">\\r\\n        <h5>\\r\\n          <span>Welcome, {{userClaims.Email}}!</span>\\r\\n        </h5>\\r\\n      </div> -->\\r\\n    </div>\\r\\n    <div class=\\\"card-tabs\\\">\\r\\n      <ul class=\\\"tabs tabs-fixed-width tabs-transparent\\\">\\r\\n        <!--When Tasks is triggered, it should use the /tasks route.\\r\\n          The /tasks route is defined in routes.ts file which is imported\\r\\n          in the app.module file. The active is just for css on tasks tab -->\\r\\n        <li class=\\\"tab\\\">\\r\\n          <a routerLink='/tasks' routerLinkActive='active'>TASKS</a>\\r\\n        </li>\\r\\n        <li class=\\\"tab\\\">\\r\\n          <a routerLink='/bills' routerLinkActive='active'>BILLS</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"card-content blue lighten-5\\\">\\r\\n      <div>\\r\\n        <router-outlet></router-outlet>\\r\\n        <!--The stuff from each route mentioned above gets displayed here-->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userClaims: any;\r\n\r\n  //Inject Router here because we're using\r\n  //router.navigate on line 27\r\n  constructor(private router: Router, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.userService.getUserInfo().subscribe((data: any) => {\r\n      this.userClaims = data;\r\n    });\r\n  }\r\n\r\n  //Remove the userToken to log out\r\n  Logout() {\r\n    localStorage.removeItem('userToken');\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<!--For the cards-->\\r\\n<div class=\\\"row\\\" *ngIf=\\\"taskBucket\\\">\\r\\n  <div *ngFor=\\\"let task of taskBucket\\\" class=\\\"card\\\">\\r\\n    <div class=\\\"card-block\\\">\\r\\n      <div class=\\\"col s12 m6 l3\\\">\\r\\n        <div class=\\\"card blue-grey darken-1\\\">\\r\\n          <div class=\\\"card-content white-text\\\">\\r\\n            <span class=\\\"card-title\\\"> {{task.TaskTitle | uppercase}}</span>\\r\\n            <hr>\\r\\n            <p>{{task.TaskDescription}}</p>\\r\\n            <br> {{ task.DueDateTime | date:'longDate' }}\\r\\n          </div>\\r\\n          <div class=\\\"card-panel hoverable card-action\\\">\\r\\n            \\r\\n            <a id=\\\"putButton\\\" (click)=\\\"OnPut(task.TaskId, task)\\\">\\r\\n              <i class=\\\"material-icons prefix\\\">edit</i> \\r\\n            </a>\\r\\n\\r\\n            <a id=\\\"deleteButton\\\" (click)=\\\"OnDelete(task.TaskId)\\\">\\r\\n              <i class=\\\"material-icons prefix\\\">delete</i>\\r\\n            </a>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<br> <hr> <br>\\r\\n\\r\\n<form #postForm=\\\"ngForm\\\" class=\\\"col s12 white\\\" (ngSubmit)=\\\"OnSubmitPost(Title.value,Description.value,DueDate.value)\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"input-field col s12\\\">\\r\\n        <i class=\\\"material-icons prefix\\\">subject</i>\\r\\n        <input type=\\\"text\\\" #Title ngModel name=\\\"Title\\\" placeholder=\\\"Title\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"input-field col s12\\\">\\r\\n        <i class=\\\"material-icons prefix\\\">description</i>\\r\\n        <input type=\\\"text\\\" #Description ngModel name=\\\"Description\\\" placeholder=\\\"Description\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"input-field col s12\\\">\\r\\n        <i class=\\\"material-icons prefix\\\">date_range</i>\\r\\n        <input type=\\\"date\\\" #DueDate ngModel name=\\\"DueDate\\\" placeholder=\\\"DueDate\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"input-field col s12\\\">\\r\\n        <button [disabled]=\\\"!postForm.valid\\\" class=\\\"btn-floating btn-large cyan pulse\\\" type=\\\"submit\\\">\\r\\n            <i class=\\\"material-icons\\\">add_circle</i>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n<div>\\r\\n  <br><br>\\r\\n  <hr>\\r\\n  <span>&copy; 2018 Notify</span>\\r\\n  <a href=\\\"https://mail.google.com\\\" target=\\\"_blank\\\">\\r\\n    <i class=\\\"material-icons prefix\\\">email</i> \\r\\n  </a>\\r\\n  <br>\\r\\n \\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../shared/user.service';\r\nimport { TaskItem } from '../../shared/taskitem.model';\r\nimport { getLocaleDateTimeFormat } from '@angular/common';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { HttpResponse } from 'selenium-webdriver/http';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.css']\r\n})\r\nexport class TaskComponent implements OnInit {\r\n  taskBucket: TaskItem;\r\n  isDeleteError : boolean = false;\r\n  isPutError : boolean = false;\r\n  isPostError : boolean = false;\r\n  \r\n  constructor(private userService : UserService, private router : Router) { }\r\n\r\n  //We don't have to put it in here\r\n  ngOnInit() {\r\n    this.getTaskItems();\r\n  }\r\n\r\n  getTaskItems(){\r\n    this.userService.getAllTaskItems().subscribe((data: any) => {\r\n      this.taskBucket = data;\r\n    });\r\n  }\r\n\r\n  OnDelete(id: Number) {\r\n    this.userService.deleteTaskItem(id).subscribe((data: any) => {\r\n      this.getTaskItems();\r\n      console.log(\"Deleted \" + id);\r\n    },\r\n      (err: HttpResponse) => {\r\n        console.log(err);\r\n        this.isDeleteError = true;\r\n      });\r\n  }\r\n\r\n  OnPut(id: Number, task: TaskItem) {\r\n    this.userService.putTaskItem(id, task).subscribe((data: any) => {\r\n      this.getTaskItems();\r\n      console.log(\"Updated \" + id);\r\n    },\r\n      (err: HttpResponse) => {\r\n        console.log(err);\r\n        this.isDeleteError = true;\r\n      });\r\n  }\r\n\r\n  OnSubmitPost(Title : string, Description : string, DueDate: Date) {\r\n    const postedTask: TaskItem = {\r\n      TaskId: 0,\r\n      UserId: 0,\r\n      TaskTitle: Title,\r\n      TaskDescription: Description,\r\n      DueDateTime: DueDate,\r\n      NotifyDateTime: DueDate,\r\n      CreatedDate: DueDate,\r\n      ModifiedDate: DueDate,\r\n      HasDueDate: true,\r\n      HasNotifyDate: false,\r\n      IsCompleted: false\r\n    }\r\n    this.userService.postTaskItem(postedTask).subscribe((data: any) => {\r\n      this.getTaskItems();\r\n      console.log(\"Posted\" + Title);\r\n    },\r\n      (err: HttpErrorResponse) => {\r\n        console.log(err);\r\n        this.isPostError = true;\r\n      });\r\n  }\r\n\r\n}\r\n","import { Routes } from '@angular/router'\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\r\nimport { SignInComponent } from './user/sign-in/sign-in.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { TaskComponent } from './home/task/task.component';\r\nimport { BillComponent } from './home/bill/bill.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    //The home component requires authentication\r\n    //canActicate is implemented in auth.guard.ts file\r\n    { \r\n        path: 'home', component: HomeComponent,canActivate:[AuthGuard]\r\n    },\r\n    {\r\n        path: 'tasks', component: HomeComponent, canActivate:[AuthGuard],\r\n        children: [{ path: '', component: TaskComponent }]\r\n    },\r\n\r\n    {\r\n        path: 'bills', component: HomeComponent, canActivate:[AuthGuard],\r\n        children: [{ path: '', component: BillComponent }]\r\n    },\r\n    //These routes do not need authentication\r\n    {\r\n        //When signup url is used it will load two components: UserComponent and SignUpComponent\r\n        //UserComponent is the parent and SignUp is the child component\r\n        path: 'signup', component: UserComponent,\r\n        children: [{ path: '', component: SignUpComponent }]\r\n    },\r\n    {\r\n        path: 'login', component: UserComponent,\r\n        children: [{ path: '', component: SignInComponent }]\r\n    },\r\n\r\n    { path : '', redirectTo:'/login', pathMatch : 'full'}\r\n    \r\n];\r\n","import { environment } from './../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Response } from \"@angular/http\";\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { RegisterBindingModel } from './user.model';\r\nimport { TaskItem } from './taskitem.model';\r\nimport { BillItem } from './billItem.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'  //Didn't have this\r\n})\r\nexport class UserService {\r\n  readonly rootUrl = environment.rootUrl;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  registerUser(user: RegisterBindingModel) {\r\n    const body: RegisterBindingModel = {\r\n      Email: user.Email,\r\n      Password: user.Password,\r\n      ConfirmPassword: user.ConfirmPassword\r\n    }\r\n    var reqHeader = new HttpHeaders({'No-Auth':'True'});  //original\r\n    return this.http.post(this.rootUrl+'/api/Account/Register', body ,{headers : reqHeader});\r\n  }\r\n\r\n  //This is similar to what we did in PostMan\r\n  //This function returns an absorver\r\n  userAuthentication(userEmail, password) {\r\n    var data = \"username=\" + userEmail + \"&password=\" + password + \"&grant_type=password\";\r\n    var reqHeader = new HttpHeaders({ 'Content-Type': 'application/x-www-urlencoded','No-Auth':'True' });\r\n    return this.http.post(this.rootUrl+'/token', data, { headers: reqHeader });\r\n  }\r\n\r\n  //Making API http get request\r\n  getUserInfo(){\r\n   return  this.http.get(this.rootUrl+'/api/Account/UserInfo');\r\n  }\r\n\r\n  /**********************TaskItem**********************/\r\n\r\n  //GET api/TaskItem\r\n  getAllTaskItems(){\r\n    return this.http.get(this.rootUrl+'/api/TaskItem');\r\n  }\r\n\r\n  //GET api/TaskItem/{id}\t \r\n  getOneTaskItem(id : Number){\r\n    return this.http.get(this.rootUrl+'/api/TaskItem/'+id);    \r\n  }\r\n\r\n  //PUT api/TaskItem/{id}\r\n  putTaskItem(id: Number, postedTask: TaskItem){\r\n    return this.http.put(this.rootUrl+'/api/TaskItem/'+id, postedTask);\r\n  }\r\n\r\n  //POST api/TaskItem\t\r\n  postTaskItem(postedTask: TaskItem){\r\n    return this.http.post(this.rootUrl + '/api/TaskItem', postedTask);\r\n  }\r\n\r\n  //DELETE api/TaskItem/{id}\r\n  deleteTaskItem(id : Number){\r\n    return this.http.delete(this.rootUrl + '/api/TaskItem/'+id);\r\n  }\r\n\r\n  \r\n  /**********************BillItem**********************/\r\n\r\n  //GET api/BillItem\r\n  getAllBillItems() {\r\n    return this.http.get(this.rootUrl + '/api/BillItem');\r\n  }\r\n\r\n  //GET api/BillItem/{id}\t\r\n  getBillItem(id: Number) {\r\n    return this.http.get(this.rootUrl + `/api/BillItem/${id}`);\r\n  }\r\n\r\n  //PUT api/BillItem/{id}\r\n  putBillItem(id: Number, putBill: BillItem) {\r\n    return this.http.put(this.rootUrl + `/api/BillItem/${id}`, putBill);\r\n  }\r\n\r\n  //POST api/BillItem\r\n  postBillItem(postBill: BillItem) {\r\n    return this.http.post(this.rootUrl + '/api/BillItem', postBill);\r\n  }\r\n\r\n  //DELETE api/BillItem/{id}\r\n  deleteBillItem(id: Number) {\r\n    return this.http.delete(this.rootUrl + `/api/BillItem/${id}`);\r\n  }\r\n}\r\n\r\n\r\n//Approved\r\n\r\n\r\n","module.exports = \"/**Approved**/\"","module.exports = \"<!--isLoginError is a property in sin-in.component.ts file-->\\r\\n<div *ngIf=\\\"isLoginError\\\" class=\\\"red-text center error-message\\\">\\r\\n  <i class=\\\"material-icons\\\">error</i> Incorrect email or password\\r\\n</div>\\r\\n<form #loginForm=\\\"ngForm\\\" class=\\\"col s12 white\\\" (ngSubmit)=\\\"OnSubmit(Email.value,Password.value)\\\">\\r\\n <div class=\\\"row\\\">\\r\\n   <div class=\\\"input-field col s12\\\">\\r\\n     <i class=\\\"material-icons prefix\\\">account_circle</i>\\r\\n     <input type=\\\"text\\\" #Email ngModel name=\\\"Email\\\" placeholder=\\\"Email\\\" required>\\r\\n   </div>\\r\\n </div>\\r\\n <div class=\\\"row\\\">\\r\\n    <div class=\\\"input-field col s12\\\">\\r\\n      <i class=\\\"material-icons prefix\\\">vpn_key</i>\\r\\n      <input type=\\\"password\\\" #Password ngModel name=\\\"Password\\\" placeholder=\\\"Password\\\" required>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"input-field col s12\\\">\\r\\n        <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn-large btn-submit\\\" type=\\\"submit\\\">Login</button>\\r\\n      </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n<!--Approved-->\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../shared/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n  isLoginError : boolean = false;\n\n  //This component is using the userAuthentication method from the\n  //user.service class so it need access to the UserService component.\n  //Dependency injection is used here to do just that.\n  constructor(private userService : UserService,private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  //Request a token\n  OnSubmit(userEmail,password){\n     this.userService.userAuthentication(userEmail,password).subscribe((data : any)=>{\n      localStorage.setItem('userToken',data.access_token);\n      //Once the user logs in, go the the home route\n      this.router.navigate(['/home']); \n    },\n    (err : HttpErrorResponse)=>{\n      this.isLoginError = true;\n    });\n  }\n\n}\n\n//Approved\n","module.exports = \"/**Approved**/\"","module.exports = \"<form class=\\\"col s12 white\\\" #userRegistrationForm=\\\"ngForm\\\" (ngSubmit)=\\\"OnSubmit(userRegistrationForm)\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s6\\\">\\n      <input class=\\\"validate\\\" type=\\\"text\\\" name=\\\"Email\\\" #Email=\\\"ngModel\\\" [(ngModel)]=\\\"user.Email\\\" [pattern]=\\\"emailPattern\\\">\\n      <label data-error=\\\"Invalid email!\\\">Email</label>\\n    </div>\\n    <div class=\\\"input-field col s6\\\">\\n        <input class=\\\"validate\\\" type=\\\"password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" [(ngModel)]=\\\"user.Password\\\" required minlength=\\\"3\\\">\\n        <label [attr.data-error]=\\\"Password.errors!=null?(Password.errors.required?'Required field!':'Minimum 3 characters needed'):''\\\">Password</label>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n      <div class=\\\"input-field col s6\\\">\\n          <input class=\\\"validate\\\" type=\\\"password\\\" name=\\\"ConfirmPassword\\\" #ConfirmPassword=\\\"ngModel\\\" [(ngModel)]=\\\"user.ConfirmPassword\\\" required minlength=\\\"3\\\">\\n          <label [attr.data-error]=\\\"ConfirmPassword.errors!=null?(ConfirmPassword.errors.required?'Required field!':'Minimum 3 characters needed'):''\\\">Confirm Password</label>\\n      </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"input-field col s12\\\">\\n      <button [disabled]=\\\"!userRegistrationForm.valid\\\" class=\\\"btn-large btn-submit\\\" type=\\\"submit\\\">Submit</button>\\n    </div>\\n  </div>\\n</form>\\n\\n<!--Approved-->\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr'\r\n\r\nimport { RegisterBindingModel } from '../../shared/user.model';\r\nimport { UserService } from '../../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  user: RegisterBindingModel;\r\n  emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\";\r\n\r\n  constructor(private userService: UserService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n\r\n  resetForm(form?: NgForm) {\r\n    if (form != null)\r\n      form.reset();\r\n    this.user = {\r\n      Email: '',\r\n      Password: '',\r\n      ConfirmPassword: ''\r\n    }\r\n  }\r\n\r\n  OnSubmit(form: NgForm) {\r\n    this.userService.registerUser(form.value)\r\n      .subscribe((data: any) => {\r\n          this.resetForm(form);\r\n          this.toastr.success('User registration successful');\r\n      });\r\n  }\r\n}\r\n\r\n\r\n//Approved\r\n\r\n\r\n","module.exports = \"/**Approved**/\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s8 offset-s2\\\">\\n      <div class=\\\"card grey lighten-2\\\">\\n        <div class=\\\"card-tabs\\\">\\n          <ul class=\\\"tabs tabs-fixed-width tabs-transparent\\\">\\n            <li class=\\\"tab\\\">\\n              <!--When Sign In is triggered, it should use the /login route-->\\n              <!--The /login route is defined in routes.ts file which is imported\\n              in the app.module file\\n              || The active is just for css on sign in tab-->\\n\\n              <a routerLink='/login' routerLinkActive='active'>Sign In</a>\\n            </li>\\n            <li class=\\\"tab\\\">\\n              <a  routerLink='/signup' routerLinkActive='active'>Sign Up</a>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"card-content white\\\">\\n          <div class=\\\"row\\\">\\n            <router-outlet></router-outlet>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!--Approved-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n//Approved\n\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  rootUrl: 'http://18.218.238.212/NotifyWebApi' //Our local host: 'http://localhost:52739'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n//Approved\n\n  "],"sourceRoot":""}